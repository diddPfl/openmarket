<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.javalab.board.repository.ItemRepository">

    <!-- 모든 아이템 조회 -->
    <select id="findAll" resultMap="itemResultMap">
        SELECT i.item_id, i.category_id, i.item_name, i.item_detail, i.price, i.regdate, i.gubun_sub_code,
        i.stock_number, i.item_sell_status, i.brand,
        c.category_name,
        im.uuid, im.file_name
        FROM item i
        LEFT JOIN category c ON i.category_id = c.category_id
        LEFT JOIN item_image im ON i.item_id = im.item_id
        ORDER BY i.item_id
    </select>

    <!-- id로 상품 조회 -->
    <select id="findById" parameterType="long" resultMap="itemResultMap">
        SELECT i.item_id, i.category_id, i.item_name, i.item_detail, i.price, i.regdate, i.gubun_sub_code,
        i.stock_number, i.item_sell_status, i.brand,
        c.category_name,
        im.uuid, im.file_name
        FROM item i
        LEFT JOIN category c ON i.category_id = c.category_id
        LEFT JOIN item_image im ON i.item_id = im.item_id
        WHERE i.item_id = #{itemId}
    </select>

    <insert id="insert" parameterType="com.javalab.board.vo.Item" useGeneratedKeys="true" keyProperty="itemId">
        INSERT INTO item (category_id, gubun_sub_code, item_name, item_detail, price, regdate, stock_number, item_sell_status, brand)
        VALUES (#{categoryId}, #{gubunSubCode}, #{itemName}, #{itemDetail}, #{price}, #{regdate}, #{stockNumber}, #{itemSellStatus}, #{brand})
    </insert>

    <insert id="insertItemImage" parameterType="com.javalab.board.vo.ItemImage">
        INSERT INTO item_image (uuid, item_id, file_name)
        VALUES (#{uuid}, #{itemId}, #{fileName})
    </insert>

    <select id="findCategoryNameById" parameterType="long" resultType="string">
        SELECT category_name FROM category WHERE category_id = #{categoryId}
    </select>
    <select id="findAllBrands" resultType="string">
        SELECT DISTINCT brand FROM item WHERE brand IS NOT NULL AND brand != ''
    </select>

    <select id="findBrandByName" parameterType="string" resultType="string">
        SELECT DISTINCT brand FROM item WHERE brand = #{brandName} LIMIT 1
    </select>

    <delete id="deleteItemsByBrand" parameterType="string">
        DELETE FROM item WHERE brand = #{brandName}
    </delete>

    <!-- 아이템에 대한 결과 매핑 -->
    <resultMap id="itemResultMap" type="com.javalab.board.vo.Item">
        <id property="itemId" column="item_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="categoryName" column="category_name"/>
        <result property="itemName" column="item_name"/>
        <result property="itemDetail" column="item_detail"/>
        <result property="price" column="price"/>
        <result property="regdate" column="regdate"/>
        <result property="gubunSubCode" column="gubun_sub_code"/>
        <result property="stockNumber" column="stock_number"/>
        <result property="itemSellStatus" column="item_sell_status" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result property="brand" column="brand"/>
        <collection property="images" ofType="com.javalab.board.vo.ItemImage">
            <result property="uuid" column="uuid"/>
            <result property="fileName" column="file_name"/>
            <result property="itemId" column="item_id"/>
        </collection>
    </resultMap>

</mapper>